name: "[Python] Release"

on:
  pull_request: {}

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PACKAGE_NAME: css_inline
  PYTHON_VERSION: "3.7" # to build abi3 wheels

jobs:
  sdist:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build sdist
        uses: messense/maturin-action@v1
        with:
          command: sdist
          args: -m bindings/python/Cargo.toml --out dist
      - name: Install sdist
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.tar.gz --force-reinstall
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release -m bindings/python/Cargo.toml --out dist
      - name: Install built wheel
        shell: bash
        run: |
          python -m pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-windows-${{ matrix.target }}
          path: dist

  linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release -m bindings/python/Cargo.toml --out dist
      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-${{ matrix.target }}
          path: dist

  linux-cross:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: [aarch64, armv7]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: 2_24
          args: --release -m bindings/python/Cargo.toml --no-default-features --out dist
      - uses: uraimo/run-on-arch-action@v2.6.0
        name: Install built wheel
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            pip3 install ${{ env.PACKAGE_NAME }} --no-index --find-links dist/ --force-reinstall
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-cross-${{ matrix.target }}
          path: dist

  release:
    name: Release
    runs-on: ubuntu-22.04
    needs:
      - sdist
      - windows
      - linux
      - linux-cross
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: all
      - name: Merge files
        run: |
          mkdir dist
          mv all/*/* dist
          rm -rf all
      - run: ls -lh
      - run: ls -lh dist
      - uses: actions/setup-python@v5
